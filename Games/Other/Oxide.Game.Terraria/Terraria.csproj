<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{CB0983BB-3B6E-4458-8484-EA0F2117EA1E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Oxide.Game.Terraria</RootNamespace>
    <AssemblyName>Oxide.Game.Terraria</AssemblyName>
    <GameName>$(MSBuildProjectName)</GameName>
    <BundleDir>$(SolutionDir)Bundles</BundleDir>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Xna.Framework">
      <HintPath>Dependencies\Microsoft.Xna.Framework.dll</HintPath>
    </Reference>
    <Reference Include="protobuf-net">
      <HintPath>..\..\..\Oxide.Core\Dependencies\protobuf-net.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="TerrariaServer">
      <HintPath>Dependencies\TerrariaServer.exe</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Libraries\Covalence\TerrariaCommandSystem.cs" />
    <Compile Include="Libraries\Covalence\TerrariaCovalenceProvider.cs" />
    <Compile Include="Libraries\Covalence\TerrariaPlayer.cs" />
    <Compile Include="Libraries\Covalence\TerrariaPlayerManager.cs" />
    <Compile Include="Libraries\Covalence\TerrariaServer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="TerrariaCore.cs" />
    <Compile Include="TerrariaExtension.cs" />
    <Compile Include="TerrariaPlugin.cs" />
    <Compile Include="TerrariaPluginLoader.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\..\Oxide.Core\Core.csproj">
      <Project>{67f65f5d-a62a-4752-849d-bff30d828107}</Project>
      <Name>Core</Name>
    </ProjectReference>
    <ProjectReference Include="..\..\..\Extensions\Oxide.Core.CSharp\CSharp.csproj">
      <Project>{9103d682-d1aa-4a95-a499-896f551aaa62}</Project>
      <Name>CSharp</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="AfterBuild">
    <ItemGroup>
      <ConfigFiles Include="$(ProjectDir)\Patched\oxide.config.json" />
      <GameFiles Include="$(ProjectDir)\Files\**\*.*; $(ProjectDir)\Files\*.*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.CSharp\$(OutputPath)\*.dll*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.CSharp\Dependencies\**\*.dll; $(SolutionDir)\Extensions\Oxide.Core.CSharp\Dependencies\**\*.so*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.MySql\$(OutputPath)\*.dll*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.MySql\Dependencies\*.dll" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.Python\$(OutputPath)\*.dll*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.Python\Dependencies\*.dll" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.SQLite\$(OutputPath)\*.dll*" />
      <ManagedFiles Include="$(SolutionDir)\Extensions\Oxide.Core.SQLite\Dependencies\**\*.*" />
      <ManagedFiles Include="$(SolutionDir)\Oxide.Core\$(OutputPath)\*.dll*" />
      <ManagedFiles Include="$(SolutionDir)\Oxide.Core\Dependencies\*.dll" />
      <ManagedFiles Include="$(TargetDir)\$(AssemblyName).dll*" />
      <NativeFiles Include="$(SolutionDir)\Extensions\Oxide.Core.CSharp\Dependencies\CSharpCompiler*.*" />
      <PatchedFiles Include="$(ProjectDir)\Patched\*.exe" />
    </ItemGroup>
    <RemoveDir Directories="$(BundleDir)\$(GameName)" />
    <Exec Command="pdb2mdb %(ManagedFiles.Identity)" Condition="'$(Configuration)' == 'Debug' And '$(OS)' == 'Windows_NT'" IgnoreExitCode="true" />
    <Copy SourceFiles="@(ConfigFiles)" DestinationFiles="@(ConfigFiles->'$(BundleDir)\$(GameName)\%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(GameFiles)" DestinationFiles="@(GameFiles->'$(BundleDir)\$(GameName)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(ManagedFiles)" DestinationFiles="@(ManagedFiles->'$(BundleDir)\$(GameName)\%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(NativeFiles)" DestinationFiles="@(NativeFiles->'$(BundleDir)\$(GameName)\%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(PatchedFiles)" DestinationFiles="@(PatchedFiles->'$(BundleDir)\$(GameName)\%(Filename)%(Extension)')" />
    <CallTarget Targets="Deploy" Condition="Exists('$(ProjectDir).deploy') And '$(OS)' != 'Unix'" />
  </Target>
  <Target Name="Deploy">
    <Exec Command="start /b /wait taskkill /f /im TerrariaServer.exe /fi &quot;memusage gt 2&quot;" />
    <Exec Command="start /b /wait taskkill /f /im CSharpCompiler.exe /fi &quot;memusage gt 2&quot;" />
    <ReadLinesFromFile File="$(ProjectDir).deploy">
      <Output PropertyName="DeployPath" TaskParameter="Lines" />
    </ReadLinesFromFile>
    <ItemGroup>
      <DeployFiles Include="$(BundleDir)\$(GameName)\**\*.*" />
    </ItemGroup>
    <Copy Condition="'$(DeployPath)' != ''" SourceFiles="@(DeployFiles)" DestinationFiles="@(DeployFiles->'$(DeployPath)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>
</Project>